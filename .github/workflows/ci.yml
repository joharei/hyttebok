name: Hyttebok CI

on:
  push:
  pull_request:
    branches: 
      - master

jobs:
  build_backend:
    name: Build backend

    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v1
      
    - name: Cache dependencies
      uses: actions/cache@v1
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Set up JDK 1.13
      uses: actions/setup-java@v1
      with:
        java-version: 1.13

    - name: Build with Gradle
      working-directory: backend
      run: ./gradlew build
  
  deploy_backend:
    name: Deploy backend
    if: github.ref == 'refs/heads/master'
    
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v1
        
      - name: Deploy to Heroku
        env:
          HEROKU_TOKEN: ${{ secrets.HEROKU_TOKEN }}
          FIREBASE_CONFIG: ${{ secrets.FIREBASE_CONFIG }}
        run: |
          git remote add heroku https://heroku:$HEROKU_TOKEN@git.heroku.com/hyttebok.git
          git subtree split --prefix backend -b heroku

          git config user.email "johan.reitan@gmail.com"
          git config user.name "Github Actions CI"
          git checkout heroku
          echo $FIREBASE_CONFIG > firebase-adminsdk-secrets.json
          git add -f firebase-adminsdk-secrets.json
          git commit -m 'add firebase secrets'
          git checkout master

          git push -f heroku heroku:master
          git branch -D heroku

  build_frontend:
    name: Build frontend
    
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v1
        
      - name: Cache dependencies
        uses: actions/cache@v1
        with:
          path: ~/.cache/yarn
          key: ${{ runner.os }}-yarn-${{ hashFiles(format('{0}{1}', github.workspace, '/frontend/yarn.lock')) }}
          restore-keys: |
            ${{ runner.os }}-yarn-
        
      - name: Build
        working-directory: frontend
        run: |
          yarn install
          yarn apollo:codegen
          yarn build
        env:
          REACT_APP_API_KEY: ${{ secrets.REACT_APP_API_KEY }}
          REACT_APP_AUTH_DOMAIN: ${{ secrets.REACT_APP_AUTH_DOMAIN }}
          REACT_APP_DATABASE_URL: ${{ secrets.REACT_APP_DATABASE_URL }}
          REACT_APP_PROJECT_ID: ${{ secrets.REACT_APP_PROJECT_ID }}
          REACT_APP_STORAGE_BUCKET: ${{ secrets.REACT_APP_STORAGE_BUCKET }}
          REACT_APP_MESSAGING_SENDER_ID: ${{ secrets.REACT_APP_MESSAGING_SENDER_ID }}
          REACT_APP_FIREBASE_APP_ID: ${{ secrets.REACT_APP_FIREBASE_APP_ID }}

      - name: Archive production artifacts
        uses: actions/upload-artifact@v1
        with:
          name: frontend_build
          path: frontend/build
  
  deploy_frontend:
    name: Deploy frontend
    
    needs: build_frontend
    
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v1
        
      - name: Download artifact
        uses: actions/download-artifact@v1
        with:
          name: frontend_build
          path: frontend/build
          
      - name: Deploy to Firebase
        uses: w9jds/firebase-action@v1.2.0
        with:
          args: deploy --only hosting
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          PROJECT_PATH: ./frontend
