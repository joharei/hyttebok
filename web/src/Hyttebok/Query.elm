-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Hyttebok.Query exposing (IsUserAuthorizedRequiredArguments, TripRequiredArguments, isUserAuthorized, trip, trips)

import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Hyttebok.InputObject
import Hyttebok.Interface
import Hyttebok.Object
import Hyttebok.Scalar
import Hyttebok.ScalarCodecs
import Hyttebok.Union
import Json.Decode as Decode exposing (Decoder)


trips : SelectionSet decodesTo Hyttebok.Object.Trip -> SelectionSet (List decodesTo) RootQuery
trips object_ =
    Object.selectionForCompositeField "trips" [] object_ (identity >> Decode.list)


type alias TripRequiredArguments =
    { slug : String }


trip : TripRequiredArguments -> SelectionSet decodesTo Hyttebok.Object.Trip -> SelectionSet decodesTo RootQuery
trip requiredArgs object_ =
    Object.selectionForCompositeField "trip" [ Argument.required "slug" requiredArgs.slug Encode.string ] object_ identity


type alias IsUserAuthorizedRequiredArguments =
    { firebaseUid : String }


isUserAuthorized : IsUserAuthorizedRequiredArguments -> SelectionSet Bool RootQuery
isUserAuthorized requiredArgs =
    Object.selectionForField "Bool" "isUserAuthorized" [ Argument.required "firebaseUid" requiredArgs.firebaseUid Encode.string ] Decode.bool
