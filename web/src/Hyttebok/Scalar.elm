-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Hyttebok.Scalar exposing (Codecs, LocalDate(..), Long(..), defaultCodecs, defineCodecs, unwrapCodecs, unwrapEncoder)

import Graphql.Codec exposing (Codec)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode
import Json.Decode as Decode exposing (Decoder)
import Json.Encode as Encode


type LocalDate
    = LocalDate String


type Long
    = Long String


defineCodecs :
    { codecLocalDate : Codec valueLocalDate
    , codecLong : Codec valueLong
    }
    -> Codecs valueLocalDate valueLong
defineCodecs definitions =
    Codecs definitions


unwrapCodecs :
    Codecs valueLocalDate valueLong
    ->
        { codecLocalDate : Codec valueLocalDate
        , codecLong : Codec valueLong
        }
unwrapCodecs (Codecs unwrappedCodecs) =
    unwrappedCodecs


unwrapEncoder getter (Codecs unwrappedCodecs) =
    (unwrappedCodecs |> getter |> .encoder) >> Graphql.Internal.Encode.fromJson


type Codecs valueLocalDate valueLong
    = Codecs (RawCodecs valueLocalDate valueLong)


type alias RawCodecs valueLocalDate valueLong =
    { codecLocalDate : Codec valueLocalDate
    , codecLong : Codec valueLong
    }


defaultCodecs : RawCodecs LocalDate Long
defaultCodecs =
    { codecLocalDate =
        { encoder = \(LocalDate raw) -> Encode.string raw
        , decoder = Object.scalarDecoder |> Decode.map LocalDate
        }
    , codecLong =
        { encoder = \(Long raw) -> Encode.string raw
        , decoder = Object.scalarDecoder |> Decode.map Long
        }
    }
